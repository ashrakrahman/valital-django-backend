/nginx/logs/
/certbot/*
### Python template
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
.mypy_cache
.vscode

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover

# Translations
*.mo
*.pot

# Django stuff:
# *.log

# Sphinx documentation
docs/_build/

# PyBuilder
target/
### JetBrains template
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio

*.iml

## Directory-based project format:
.idea/
# if you remove the above rule, at least ignore the following:

# User-specific stuff:
# .idea/workspace.xml
# .idea/tasks.xml
# .idea/dictionaries

# Sensitive or high-churn files:
# .idea/dataSources.ids
# .idea/dataSources.xml
# .idea/sqlDataSources.xml
# .idea/dynamic.xml
# .idea/uiDesigner.xml

# Gradle:
# .idea/gradle.xml
# .idea/libraries

# Mongo Explorer plugin:
# .idea/mongoSettings.xml

## File-based project format:
*.ipr
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties

# Custom
Pipfile.lock
poetry.lock


# var ws = null;
#     var email = localStorage.getItem("user_email");
#     var token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb250ZXh0Ijp7InVzZXIiOnsiYXZhdGFyIjoiIiwibmFtZSI6ImFxdWFtYW4iLCJlbWFpbCI6IiJ9fSwiaWQiOiI2MWVjNWU3YS03MTE2LTRlMTktYTc2ZC1kOGJiMGJmNGVlM2EiLCJleHAiOjE3MzM3ODg4NjksImlhdCI6MTY0NzM4ODU2OX0.oiosQfS7bVJM0FO_Jov1EQEPveVtVDGODxreCYEjPiU";
#     ws = new WebSocket("ws://api.aquarium.ca/client/" + email + "/messages?token=" + token);

#     ws.onmessage = function (event) {
#       event.data === localStorage.getItem("aqua_client") && updateMeetingRoomStatus($('.meetingroom-wrapper').data('update') || $('.sidebar-meetingroom-wrapper').data('update'));
#     };

__pycache__/
env/
venv/

# .env

node_modules
node_modules/

package-lock.json

web/node_modules

# /.env

# docker-compose.yml

.DS_Store

*.pyc
__pycache